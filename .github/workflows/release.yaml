name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Executable
        env:
          OS: ${{ matrix.os }}
        shell: bash
        run: |
          if [[ "$OS" = "windows-latest" ]]; then 
              curl -L 'https://7-zip.org/a/7zr.exe' --output 7z;
              curl https://files.x-plane.com/public/xptools/xptools_win_24-5.zip --output xptools.zip;
              unzip xptools.zip;
              mv tools/DSFTool.exe dsf_tool;
          else
            if [[ "$OS" = "ubuntu-latest" ]]; then
              curl https://7-zip.org/a/7z2408-linux-x64.tar.xz --output 7z.tar.xz
              tar -xf 7z.tar.xz
              mv 7zz 7z
              curl https://files.x-plane.com/public/xptools/xptools_lin_24-5.zip --output xptools.zip;
              ./7z x xptools.zip;
              mv tools/DSFTool dsf_tool;

            else
              curl  https://7-zip.org/a/7z2408-mac.tar.xz --output 7z.tar.xz
              tar -xf 7z.tar.xz
              mv 7zz 7z
              curl https://files.x-plane.com/public/xptools/xptools_mac_24-5.zip --output xptools.zip;
              ./7z x xptools.zip;
              mv tools/DSFTool dsf_tool;
              
            fi
          fi

          ls
          
          python -m PyInstaller  --distpath o4xp_2_xp12/. --workpath ./OBJ --onefile o4xp_2_xp12.py \
            --add-binary "dsf_tool:." \
            --add-binary "7z:."
          
          if [[ "$OS" = "windows-latest" ]]; then 
              mv o4xp_2_xp12/o4xp_2_xp12.exe o4xp_2_xp12.exe; 
          else
              mv o4xp_2_xp12/o4xp_2_xp12 o4xp_2_xp12_$OS;
          fi

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: |
            o4xp_2_xp12_${{ matrix.os }}
            o4xp_2_xp12.exe

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./build

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.workspace }}/build/windows-latest-build/o4xp_2_xp12.exe
            ${{ github.workspace }}/build/ubuntu-latest-build/o4xp_2_xp12_ubuntu-latest
            ${{ github.workspace }}/build/macos-13-build/o4xp_2_xp12_macos-13
          prerelease: ${{ contains(github.ref_name, '-') }}